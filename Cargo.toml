[package]
name = "nnl"
version = "0.1.0"
edition = "2024"
authors = ["Giona Berti <hotplugin.dev@gmail.com>"]
description = "A high-performance neural network library for Rust with CPU and GPU support"
license = "MIT"
repository = "https://github.com/hotplugindev/nnl"
keywords = ["neural-network", "machine-learning", "deep-learning", "gpu", "cpu"]
categories = ["science", "algorithms"]

exclude = [
    "/.gitignore",
    "/target/*",
    "*.mp4",
    "*.png",
    "*.jpg",
    "*.zip",
    "/data/*",
    "/notebooks/*",
    "/examples/large_file.rs",
    "examples/*",
    "img/nns2.png",
]


[lib]
name = "nnl"
path = "src/lib.rs"

[[example]]
name = "mnist"
path = "examples/mnist.rs"

[[example]]
name = "mnist_gpu"
path = "examples/mnist_gpu.rs"

[[example]]
name = "mnist_small"
path = "examples/mnist_small.rs"

[[example]]
name = "mnist_small_gpu"
path = "examples/mnist_small_gpu.rs"

[[example]]
name = "xor"
path = "examples/xor.rs"

[[example]]
name = "xor_gpu"
path = "examples/xor_gpu.rs"

[[example]]
name = "simple_cnn"
path = "examples/simple_cnn.rs"

[[example]]
name = "simple_cnn_gpu"
path = "examples/simple_cnn_gpu.rs"

[dependencies]
# Core math and arrays
ndarray = { version = "0.15", features = ["serde", "blas"] }
nalgebra = { version = "0.32", features = ["serde-serialize"] }
num-traits = "0.2"
num_cpus = "1.16"
rand = { version = "0.8", features = ["std"] }
rand_distr = "0.4"

# Parallelization and performance
rayon = "1.7"
half = { version = "2.3", features = ["serde"] }
bytemuck = { version = "1.14", features = ["derive"] }

# GPU Computing - Vulkan
vulkano = { version = "0.34", features = ["serde"] }
vulkano-shaders = "0.34"
vulkano-util = "0.34"

# CUDA support (optional)
cudarc = { version = "0.10", features = ["f16"], optional = true }

# ROCm/HIP support (optional)
hip-sys = { version = "0.1.1", optional = true }

# CPU optimizations
openblas-src = { version = "0.10", features = [
    "cblas",
    "system",
], optional = true }
intel-mkl-src = { version = "0.8", features = [
    "mkl-static-lp64-iomp",
], optional = true }

# Serialization
serde = { version = "1.0", features = ["derive"] }
bincode = "1.3"
serde_json = "1.0"

# Utilities
thiserror = "1.0"
anyhow = "1.0"
log = "0.4"
env_logger = "0.10"

# Examples dependencies
clap = { version = "4.4", features = ["derive"], optional = true }
image = { version = "0.24", optional = true }

# Additional dependencies for I/O and utilities
chrono = { version = "0.4", features = ["serde"] }
rmp-serde = "1.1"

# Development dependencies
[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
approx = "0.5"
tempfile = "3.8"

[features]
default = ["cpu-optimized", "examples"]
cpu-optimized = ["openblas-src"]
cuda = ["cudarc"]
rocm = ["hip-sys"]
intel-mkl = ["intel-mkl-src"]
examples = ["clap", "image"]
all-backends = ["cuda", "rocm", "cpu-optimized"]


[package.metadata.docs.rs]
features = ["all-backends", "examples"]
rustdoc-args = ["--cfg", "docsrs"]
